//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Grupp_Allmän_handling.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEService")]
    public interface IEService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetAllCases", ReplyAction="http://tempuri.org/IEService/GetAllCasesResponse")]
        EService_WebService.Case[] GetAllCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetAllCases", ReplyAction="http://tempuri.org/IEService/GetAllCasesResponse")]
        System.Threading.Tasks.Task<EService_WebService.Case[]> GetAllCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetNonStartedCases", ReplyAction="http://tempuri.org/IEService/GetNonStartedCasesResponse")]
        EService_WebService.Case[] GetNonStartedCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetNonStartedCases", ReplyAction="http://tempuri.org/IEService/GetNonStartedCasesResponse")]
        System.Threading.Tasks.Task<EService_WebService.Case[]> GetNonStartedCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetStartedCases", ReplyAction="http://tempuri.org/IEService/GetStartedCasesResponse")]
        EService_WebService.Case[] GetStartedCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetStartedCases", ReplyAction="http://tempuri.org/IEService/GetStartedCasesResponse")]
        System.Threading.Tasks.Task<EService_WebService.Case[]> GetStartedCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetClosedCases", ReplyAction="http://tempuri.org/IEService/GetClosedCasesResponse")]
        EService_WebService.Case[] GetClosedCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetClosedCases", ReplyAction="http://tempuri.org/IEService/GetClosedCasesResponse")]
        System.Threading.Tasks.Task<EService_WebService.Case[]> GetClosedCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/EditCase", ReplyAction="http://tempuri.org/IEService/EditCaseResponse")]
        void EditCase(EService_WebService.Case aCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/EditCase", ReplyAction="http://tempuri.org/IEService/EditCaseResponse")]
        System.Threading.Tasks.Task EditCaseAsync(EService_WebService.Case aCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetCasesFromSearchWord", ReplyAction="http://tempuri.org/IEService/GetCasesFromSearchWordResponse")]
        EService_WebService.Case[] GetCasesFromSearchWord(string searchWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/GetCasesFromSearchWord", ReplyAction="http://tempuri.org/IEService/GetCasesFromSearchWordResponse")]
        System.Threading.Tasks.Task<EService_WebService.Case[]> GetCasesFromSearchWordAsync(string searchWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/ValidLogin", ReplyAction="http://tempuri.org/IEService/ValidLoginResponse")]
        bool ValidLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/ValidLogin", ReplyAction="http://tempuri.org/IEService/ValidLoginResponse")]
        System.Threading.Tasks.Task<bool> ValidLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/CreateCase", ReplyAction="http://tempuri.org/IEService/CreateCaseResponse")]
        void CreateCase(EService_WebService.Case newCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/CreateCase", ReplyAction="http://tempuri.org/IEService/CreateCaseResponse")]
        System.Threading.Tasks.Task CreateCaseAsync(EService_WebService.Case newCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/SendMail", ReplyAction="http://tempuri.org/IEService/SendMailResponse")]
        void SendMail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEService/SendMail", ReplyAction="http://tempuri.org/IEService/SendMailResponse")]
        System.Threading.Tasks.Task SendMailAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEServiceChannel : Grupp_Allmän_handling.ServiceReference1.IEService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EServiceClient : System.ServiceModel.ClientBase<Grupp_Allmän_handling.ServiceReference1.IEService>, Grupp_Allmän_handling.ServiceReference1.IEService {
        
        public EServiceClient() {
        }
        
        public EServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EService_WebService.Case[] GetAllCases() {
            return base.Channel.GetAllCases();
        }
        
        public System.Threading.Tasks.Task<EService_WebService.Case[]> GetAllCasesAsync() {
            return base.Channel.GetAllCasesAsync();
        }
        
        public EService_WebService.Case[] GetNonStartedCases() {
            return base.Channel.GetNonStartedCases();
        }
        
        public System.Threading.Tasks.Task<EService_WebService.Case[]> GetNonStartedCasesAsync() {
            return base.Channel.GetNonStartedCasesAsync();
        }
        
        public EService_WebService.Case[] GetStartedCases() {
            return base.Channel.GetStartedCases();
        }
        
        public System.Threading.Tasks.Task<EService_WebService.Case[]> GetStartedCasesAsync() {
            return base.Channel.GetStartedCasesAsync();
        }
        
        public EService_WebService.Case[] GetClosedCases() {
            return base.Channel.GetClosedCases();
        }
        
        public System.Threading.Tasks.Task<EService_WebService.Case[]> GetClosedCasesAsync() {
            return base.Channel.GetClosedCasesAsync();
        }
        
        public void EditCase(EService_WebService.Case aCase) {
            base.Channel.EditCase(aCase);
        }
        
        public System.Threading.Tasks.Task EditCaseAsync(EService_WebService.Case aCase) {
            return base.Channel.EditCaseAsync(aCase);
        }
        
        public EService_WebService.Case[] GetCasesFromSearchWord(string searchWord) {
            return base.Channel.GetCasesFromSearchWord(searchWord);
        }
        
        public System.Threading.Tasks.Task<EService_WebService.Case[]> GetCasesFromSearchWordAsync(string searchWord) {
            return base.Channel.GetCasesFromSearchWordAsync(searchWord);
        }
        
        public bool ValidLogin(string username, string password) {
            return base.Channel.ValidLogin(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidLoginAsync(string username, string password) {
            return base.Channel.ValidLoginAsync(username, password);
        }
        
        public void CreateCase(EService_WebService.Case newCase) {
            base.Channel.CreateCase(newCase);
        }
        
        public System.Threading.Tasks.Task CreateCaseAsync(EService_WebService.Case newCase) {
            return base.Channel.CreateCaseAsync(newCase);
        }
        
        public void SendMail(string email) {
            base.Channel.SendMail(email);
        }
        
        public System.Threading.Tasks.Task SendMailAsync(string email) {
            return base.Channel.SendMailAsync(email);
        }
    }
}
